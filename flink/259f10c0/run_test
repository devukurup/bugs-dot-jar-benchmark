#!/bin/bash
script_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
benchmark_name=$(echo $script_dir | rev | cut -d "/" -f 3 | rev)
project_name=$(echo $script_dir | rev | cut -d "/" -f 2 | rev)
bug_id=$(echo $script_dir | rev | cut -d "/" -f 1 | rev)
dir_name=/experiment/$benchmark_name/$project_name/$bug_id
TEST_CLASS=$1
EXIT_CODE=1
cd $dir_name/src/src

if [ -z "$TEST_CLASS" ];
then
  echo "requires a test class"
  exit 255
fi

SUB_PROJECT="flink-compiler"

if [[ $SUB_PROJECT != "<SUB_PROJECT>" ]]
then
timeout 10 mvn test -pl $SUB_PROJECT -amd -Dtest=$TEST_CLASS \
  -V -B -U -Dhttps.protocols=TLSv1.2 \
  -Denforcer.skip=true \
  -Dcheckstyle.skip=true \
  -Dcobertura.skip=true \
  -Djacoco.skip=true \
  -Drat.skip=true \
  -Drat.ignoreErrors=true \
  -Drat.numUnapprovedLicenses=1000000 \
  -Dlicense.skip=true \
  -Dfindbugs.skip=true \
  -Dgpg.skip=true \
  -Dskip.npm=true \
  -Dskip.gulp=true \
  -Dskip.bower=true \
  -Dbaseline.skip=true \
  -Dmaven.javadoc.skip=true > /dev/null 2>&1
else
  timeout 10 mvn test -Dtest=$TEST_CLASS \
    -V -B -U -Dhttps.protocols=TLSv1.2 \
    -Denforcer.skip=true \
    -Dcheckstyle.skip=true \
    -Dcobertura.skip=true \
    -Djacoco.skip=true \
    -Drat.skip=true \
    -Drat.ignoreErrors=true \
    -Drat.numUnapprovedLicenses=1000000 \
    -Dlicense.skip=true \
    -Dfindbugs.skip=true \
    -Dgpg.skip=true \
    -Dskip.npm=true \
    -Dskip.gulp=true \
    -Dskip.bower=true \
    -Dbaseline.skip=true \
    -Dmaven.javadoc.skip=true > /dev/null 2>&1
fi

EXIT_CODE=$?

if [[ $EXIT_CODE -eq 0 ]]
then
  echo "PASS"
else
  echo "FAIL"
fi;

exit $EXIT_CODE

